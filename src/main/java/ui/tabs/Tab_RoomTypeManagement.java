/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.tabs;

import dao.RoomTypeDAOImpl;
import entities.RoomType;
import interfaces.RoomTypesDAO;
import jakarta.xml.bind.annotation.XmlType;
import lombok.SneakyThrows;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.geom.RoundRectangle2D;
import java.rmi.RemoteException;
import java.util.List;

/**
 *
 * @author Lenovo
 */
public class Tab_RoomTypeManagement extends JFrame {

    /**
     * Creates new form Tab_ServicesManagement
     */
    private RoomTypesDAO roomTypeDAO;
    private RoomType selectedRoomType;
    private DefaultTableModel tableModel;

    @SneakyThrows
    public Tab_RoomTypeManagement() {
        roomTypeDAO = new RoomTypeDAOImpl();
        initComponents();

        // Đặt DefaultTableModel cho customTableButton1
        String[] columnNames = {"Mã loại phòng", "Loại phòng", "Mô tả"};
        tableModel = new DefaultTableModel(columnNames, 0);
        customTableButton1.getTable().setModel(tableModel);
        setBackground(new Color(255, 255, 255));
        setLocationRelativeTo(null);
        loadRoomTypes();
        setupListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customTableButtonBeanInfo1 = new ui.components.table.CustomTableButtonBeanInfo();
        jPanel6 = new JPanel();
        jPanel2 = new JPanel();
        jPanel3 = new JPanel();
        customRoundedTextField1 = new ui.components.textfield.CustomRoundedTextField();
        jLabel1 = new JLabel();
        jPanel4 = new JPanel();
        customRoundedTextField2 = new ui.components.textfield.CustomRoundedTextField();
        jLabel2 = new JLabel();
        jPanel5 = new JPanel();
        jLabel3 = new JLabel();
        jScrollPane2 = new JScrollPane();
        jTextArea1 = new JTextArea();
        btnAddType = new ui.components.button.ButtonCustom();
        btnUpdateType = new ui.components.button.ButtonCustom();
        btnResetType = new ui.components.button.ButtonCustom();
        btnExit = new ui.components.button.ButtonCancelCustom();
        customTableButton1 = new ui.components.table.CustomTableButton();
        jLabel4 = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý loại phòng");
        setBackground(new Color(255, 255, 255));
        setBounds(new Rectangle(0, 0, 850, 400));
        setForeground(new Color(0, 0, 0));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new Color(255, 255, 255));
        jPanel6.setBorder(BorderFactory.createLineBorder(new Color(149, 145, 239), 2));

        jPanel2.setBackground(new Color(255, 255, 255));
        jPanel2.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(149, 145, 239)));

        jPanel3.setBackground(new Color(255, 255, 255));

        customRoundedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customRoundedTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã loại:");

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customRoundedTextField1, GroupLayout.PREFERRED_SIZE, 234, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(customRoundedTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new Color(255, 255, 255));

        customRoundedTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customRoundedTextField2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Tên  loại:");

        GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customRoundedTextField2, GroupLayout.PREFERRED_SIZE, 234, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(customRoundedTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new Color(255, 255, 255));

        jLabel3.setText("Mô tả");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        GroupLayout jPanel5Layout = new GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnAddType.setIcon(new ImageIcon(getClass().getResource("/plus.png"))); // NOI18N
        btnAddType.setText("Thêm");
        btnAddType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTypeActionPerformed(evt);
            }
        });

        btnUpdateType.setIcon(new ImageIcon(getClass().getResource("/update.png"))); // NOI18N
        btnUpdateType.setText("Cập nhật");
        btnUpdateType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTypeActionPerformed(evt);
            }
        });

        btnResetType.setIcon(new ImageIcon(getClass().getResource("/update.png"))); // NOI18N
        btnResetType.setText("Làm mới");
        btnResetType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetTypeActionPerformed(evt);
            }
        });

        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddType, GroupLayout.PREFERRED_SIZE, 140, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnResetType, GroupLayout.PREFERRED_SIZE, 140, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(btnExit, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 140, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateType, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 140, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jPanel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddType, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateType, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnResetType, GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(btnExit, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        customTableButton1.setColumnNames(new String[] {"Mã loại phòng", "Loại phòng", "Mô tả"});
        customTableButton1.setHeaderBackgroundColor(new Color(149, 145, 239));

        jLabel4.setBackground(new Color(149, 145, 239));
        jLabel4.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new Color(149, 145, 239));
        jLabel4.setText("QUẢN LÝ LOẠI PHÒNG");

        GroupLayout jPanel6Layout = new GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customTableButton1, GroupLayout.PREFERRED_SIZE, 446, GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel4)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(customTableButton1, GroupLayout.PREFERRED_SIZE, 427, GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customRoundedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customRoundedTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customRoundedTextField1ActionPerformed

    private void customRoundedTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customRoundedTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customRoundedTextField2ActionPerformed

    @SneakyThrows
    private void btnAddTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTypeActionPerformed
        // TODO add your handling code here:
        String typeId = generateNewTypeId();
        customRoundedTextField1.setText(typeId); // Hiển thị mã loại mới trên giao diện

        String typeName = customRoundedTextField2.getText().trim();
        String description = jTextArea1.getText().trim();

        if (typeName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên loại không được để trống!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (roomTypeDAO.findById(typeId) != null) {
            JOptionPane.showMessageDialog(this, "Mã loại đã tồn tại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        RoomType newRoomType = new RoomType();
        newRoomType.setTypeID(typeId);
        newRoomType.setTypeName(typeName);
        newRoomType.setDescription(description);

        try {
            roomTypeDAO.create(newRoomType);
            JOptionPane.showMessageDialog(this, "Thêm loại phòng thành công!");
            loadRoomTypes();
            clearFields();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm loại phòng: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddTypeActionPerformed

    private void btnUpdateTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTypeActionPerformed
        // TODO add your handling code here:
        if (selectedRoomType == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một loại phòng để cập nhật!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String typeId = customRoundedTextField1.getText().trim();
        String typeName = customRoundedTextField2.getText().trim();
        String description = jTextArea1.getText().trim();

        if (typeId.isEmpty() || typeName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã loại và tên loại không được để trống!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!typeId.equals(selectedRoomType.getTypeID())) {
            JOptionPane.showMessageDialog(this, "Không thể thay đổi mã loại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        selectedRoomType.setTypeName(typeName);
        selectedRoomType.setDescription(description);

        try {
            roomTypeDAO.update(selectedRoomType);
            JOptionPane.showMessageDialog(this, "Cập nhật loại phòng thành công!");
            loadRoomTypes();
            clearFields();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật loại phòng: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateTypeActionPerformed

    private void btnResetTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetTypeActionPerformed
        // TODO add your handling code here:
        clearFields();
        loadRoomTypes();
    }//GEN-LAST:event_btnResetTypeActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    @SneakyThrows
    private void loadRoomTypes() {
        List<RoomType> roomTypes = roomTypeDAO.findAll();
        tableModel.setRowCount(0); // Xóa dữ liệu cũ
        for (RoomType roomType : roomTypes) {
            tableModel.addRow(new Object[]{
                    roomType.getTypeID(),
                    roomType.getTypeName(),
                    roomType.getDescription()
            });
        }
        tableModel.fireTableDataChanged();
        customTableButton1.repaint();
        customTableButton1.revalidate();
    }
    private void setupListeners() {
        customTableButton1.getTable().getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = customTableButton1.getTable().getSelectedRow();
                if (selectedRow >= 0) {
                    String typeId = (String) customTableButton1.getTable().getValueAt(selectedRow, 0);
                    try {
                        selectedRoomType = roomTypeDAO.findById(typeId);
                    } catch (RemoteException ex) {
                        throw new RuntimeException(ex);
                    }
                    if (selectedRoomType != null) {
                        customRoundedTextField1.setText(selectedRoomType.getTypeID());
                        customRoundedTextField2.setText(selectedRoomType.getTypeName());
                        jTextArea1.setText(selectedRoomType.getDescription());
                    }
                } else {
                    clearFields();
                }
            }
        });
    }
    private void clearFields() {
        customRoundedTextField1.setText("");
        customRoundedTextField2.setText("");
        jTextArea1.setText("");
        selectedRoomType = null;
        customTableButton1.getTable().clearSelection();
    }
    @SneakyThrows
    private String generateNewTypeId() {
        List<RoomType> roomTypes = roomTypeDAO.findAll();
        int maxNumber = 0;

        // Tìm số lớn nhất từ các mã loại hiện có
        for (RoomType roomType : roomTypes) {
            String typeId = roomType.getTypeID();
            if (typeId != null && typeId.startsWith("RT")) {
                try {
                    int number = Integer.parseInt(typeId.substring(2));
                    maxNumber = Math.max(maxNumber, number);
                } catch (NumberFormatException e) {
                    // Bỏ qua nếu không parse được
                }
            }
        }

        // Tăng số lên 1 và định dạng lại thành RTXXX
        maxNumber++;
        return String.format("RT%03d", maxNumber);
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Tab_RoomTypeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Tab_RoomTypeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Tab_RoomTypeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Tab_RoomTypeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Tab_RoomTypeManagement().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ui.components.button.ButtonCustom btnAddType;
    private ui.components.button.ButtonCancelCustom btnExit;
    private ui.components.button.ButtonCustom btnResetType;
    private ui.components.button.ButtonCustom btnUpdateType;
    private ui.components.textfield.CustomRoundedTextField customRoundedTextField1;
    private ui.components.textfield.CustomRoundedTextField customRoundedTextField2;
    private ui.components.table.CustomTableButton customTableButton1;
    private ui.components.table.CustomTableButtonBeanInfo customTableButtonBeanInfo1;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel4;
    private JPanel jPanel5;
    private JPanel jPanel6;
    private JScrollPane jScrollPane2;
    private JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
